    1  whoami
    2  history
    3  mkdir ~/work
    4  cd ~/work
    5  ssh-keygen
    6  cat ~/.ssh/id_rsa.pub
    7  git config --global user.name "Bard K. Roh"
    8  git config --global user.email bardroh@weable.ai
    9  git config --global --list
   10  git clone git@github.com:weable-kosa/kosa-msa-2024-2nd.git
   11  ls
   12  cd kosa-msa-2024-2nd/
   13  clear
   14  ls
   15  cd src
   16  ls
   17  cd exercise/
   18  ls
   19  cd ba
   20  cd bardroh/
   21  ls
   22  cd day02
   23  clear
   24  histroy
   25  history
   26  history > h1.txt
   27  git add h1.txt
   28  git commit -m 'add history'
   29  git pull
   30  git push
   31  cat ~/.ssh/id_rsa.pub 
   32  clear
   33  ls
   34  clear
   35  ls
   36  whoami
   37  clear
   38  curl -fsSL https://get.docker.com -o install-docker.sh
   39  ls
   40  cat install-docker.sh
   41  clear
   42  sh install-docker.sh --dry-run
   43  sudo sh install-docker.sh
   44  clear
   45  docker -v
   46  docker ps
   47  docker -v
   48  docker run -it centos:7
   49  ckear
   50  clear
   51  rpm
   52  yum
   53  apt-get
   54  clear
   55  cat /etc/*release*
   56  docker images
   57  docker pull ubuntu:20.04
   58  docker images
   59  ckear
   60  clear
   61  docker create -it --name myubuntu ubuntu:20.04 
   62  docker start myubuntu
   63  docker attach myubuntu
   64  docker start myubuntu
   65  docker attach myubuntu
   66  docker ps
   67  clear
   68  docker ps -a
   69  docker inspect myubuntu
   70  docker ps -a
   71  clear
   72  docker run -i -t ubuntu:20.04 echo hello world!
   73  docker ps -a
   74  docker rename myubuntu renamed
   75  docker ps -a
   76  docker rename renamed myubuntu
   77  docker ps -a
   78  docker rm -f myubuntu
   79  docker ps -a
   80  docker container prune
   81  clear
   82  docker ps -a 
   83  docker ps -a -q
   84  docker rm -f $(docker ps -a -q)
   85  docker ps -a -q
   86  docker ps -a 
   87  docker run -it --name network_test ubuntu:14.04
   88  clear
   89  docker ps
   90  docker run -it --name mywebserver -p 80:80 ubuntu:14.04
   91  docker ps -a
   92  docker rm -f $(docker ps -a -q)
   93  docker ps -a
   94  \
   95  docker ps -a
   96  docker run -d --name wordpressdb -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=wordpress mysql:5.7
   97  docker ps -a
   98  docker run -d -e WORDPRESS_DB_USER=root -e  WORDPRESS_DB_PASSWORD=password --name wordpress --link wordpressdb:mysql -p 80:80 wordpress:5
   99  docker ps
  100  clear
  101  cd work/
  102  ls
  103  history
  104  ls
  105  cd kosa-msa-2024-2nd/
  106  ls
  107  cd src
  108  ls
  109  cd exercise/
  110  ls
  111  cd ba
  112  cd bardroh/
  113  ls
  114  cd day0
  115  cd day02
  116  ls
  117  history > h2.txt
  118  git add h2.txt 
  119  git commit -m 'add history h2.txt'
  120  git pull
  121  git config pull.rebase false
  122  git pull
  123  git push
  124  clear
  125  cd
  126  docker rm -f $(docker ps -a -q)
  127  docker ps -a
  128  history
  129  docker run -d --name wordpressdb -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=wordpress mysql:5.7
  130  docker ps
  131  docker run -d -e WORDPRESS_DB_USER=root -e  WORDPRESS_DB_PASSWORD=password --name wordpress --link wordpressdb:mysql -p 80:80 wordpress:5
  132  docker ps
  133  clear
  134  docker rm -f $(docker ps -a -q)
  135  docker ps -a
  136  docker run -d --name wordpressdb_hostvolume -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=wordpress -v /home/wordpress_db:/var/lib/mysql mysql:5.7
  137  docker ps
  138  docker logs wordpressdb_hostvolume
  139  ls /home/wordpress_db/
  140  docker run -d -e WORDPRESS_DB_USER=root -e WORDPRESS_DB_PASSWORD=password --name wordpress_hostvolume --link wordpressdb_hostvolume:mysql -p 80:80 wordpress:5
  141  docker ps
  142  docker logs wordpress_hostvolume
  143  docker rm -f $(docker ps -a -q)
  144  docker ps -a
  145  history
  146  ls /home/wordpress_db/
  147  clear
  148  docker run -d --name wordpressdb_hostvolume -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=wordpress -v /home/wordpress_db:/var/lib/mysql mysql:5.7
  149  docker logs wordpressdb_hostvolume
  150  history
  151  docker run -d -e WORDPRESS_DB_USER=root -e WORDPRESS_DB_PASSWORD=password --name wordpress_hostvolume --link wordpressdb_hostvolume:mysql -p 80:80 wordpress:5
  152  docker ps
  153  docker logs wordpress_hostvolume
  154  clear
  155  cd work/
  156  ls
  157  cd kosa-msa-2024-2nd/
  158  ls
  159  cd src
  160  clear
  161  ls
  162  cd exercise/
  163  ls
  164  cd bardroh/
  165  ls
  166  cd day02/
  167  ls
  168  history > h3.txt
  169  git add h3.txt 
  170  git commit
  171  git push
  172  clear
  173  docker ps -a
  174  docker rm -f $(docker ps -a -q)
  175  clear
  176  ls
  177  docker run -d --name joomla_db -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=joomla_db -v /home/joomla_db:/var/lib/mysql mysql:5.7
  178  docker ps
  179  docker logs  joomla_db
  180  ls /home/joomla_db/
  181  docker run -d --name joomla -p 80:80 --link joomla_db:mysql -e JOOMLA_DB_HOST=joomla_db -e JOOMLA_DB_USER=root -e JOOMLA_DB_PASSWORD=password -e JOOMLA_DB_NAME=joomla_db -v /home/joomla_web:/var/www/html joomla:4.4
  182  docker ps
  183  docker logs joomla
  184  ls /home/joomla_web/
  185  vi /home/joomla_web/configuration.php 
  186  clear
  187  ls
  188  docker rm -f $(docker ps -a -q)
  189  docker ps -a
  190  ls /home/joomla_db/
  191  ls /home/joomla_web/
  192  docker run -d --name joomla_db -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=joomla_db -v /home/joomla_db:/var/lib/mysql mysql:5.7
  193  docker logs joomla_db
  194  docker run -d --name joomla -p 80:80 --link joomla_db:mysql -e JOOMLA_DB_HOST=joomla_db -e JOOMLA_DB_USER=root -e JOOMLA_DB_PASSWORD=password -e JOOMLA_DB_NAME=joomla_db -v /home/joomla_web:/var/www/html joomla:4.4
  195  docker ps
  196  docker logs joomla
  197  clear
  198  ls
  199  docker ps
  200  docker exec -it joomla /bin/bash
  201  docker ps
  202  cear
  203  clear
  204  ls
  205  history > h4.txt
  206  vi joomla.txt
  207  git add *.txt
  208  git commit -m 'add joomla'
  209  git pull
  210  git push
  211  clear
  212  docker ps -a
  213  docker rm -f $(docker ps -a -q)
  214  clear
  215  docker run -d --name postgres-db     -e POSTGRES_DB=drupal     -e POSTGRES_USER=user     -e POSTGRES_PASSWORD=pass     -v /home/drupal_db:/var/lib/postgresql/data postgres:12
  216  ls /home/drupal_db/
  217  docker ps
  218  docker logs postgres-db
  219  docker volume create drupal-sites
  220  docker volume ls
  221  docker run --rm -v drupal-sites:/temporary/sites drupal:9 cp -aRT /var/www/html/sites /temporary/sites
  222  docker ps -a
  223  docker run --name my-drupal -d -p 80:80 --link postgres-db:my-db     -v drupal-modules:/var/www/html/modules     -v drupal-profiles:/var/www/html/profiles     -v drupal-sites:/var/www/html/sites     -v drupal-themes:/var/www/html/themes drupal:9
  224  docker ps -a
  225  docker logs my-drupal
  226  docker ps -a
  227  docker rm -f $(docker ps -a -q)
  228  docker ps -a
  229  ls /home/drupal_db/
  230  docker volume ls
  231  docker run -d --name postgres-db     -e POSTGRES_DB=drupal     -e POSTGRES_USER=user     -e POSTGRES_PASSWORD=pass     -v /home/drupal_db:/var/lib/postgresql/data postgres:12
  232  docker ps
  233  docker logs postgres-db
  234  docker run --name my-drupal -d -p 80:80 --link postgres-db:my-db     -v drupal-modules:/var/www/html/modules     -v drupal-profiles:/var/www/html/profiles     -v drupal-sites:/var/www/html/sites     -v drupal-themes:/var/www/html/themes drupal:9
  235  docker ps
  236  docker logs my-drupal
  237  clear
  238  ls
  239  vi drupal.txt
  240  history > h5.txt
  241  git add h5.txt drupal.txt 
  242  git commit
  243  git pull
  244  git push
  245  clear
  246  docker ps -a
  247  docker rm -f $(docker ps -a -q)
  248  docker ps -a
  249  clear
  250  ls
  251  docker run -it -d --name volume_override -v /home/wordpress_db:/var/lib/mysql ubuntu:18.04
  252  docker ps -a
  253  docker exec volume_override ls /var/lib/mysql
  254  ls /home/wordpress_db/
  255  clear
  256  docker run -it --name volumes_from_container --volumes-from volume_override ubuntu:18.04
  257  docker attach volume_override
  258  docker volume create --name myvolume
  259  clear
  260  docker volume ls
  261  docker volume inspect myvolume
  262  docker ps
  263  docker ps -a
  264  clear
  265  docker ps -a
  266  docker container inspect volume_override
  267  clear
  268  docker volume ls
  269  docker volumes
  270  docker volume ls
  271  clear
  272  docker volume ls
  273  docker container ls
  274  docker images
  275  docker image ls
  276  clear
  277  docker volume inspect myvolume
  278  cd /var/lib/docker/
  279  clear
  280  ls
  281  cd containers/
  282  ls
  283  cd af9069a63570a63e67d703a77ab49744111d8f942cb5cf47d4a0aa3d207a42ec/
  284  ls
  285  cd ..
  286  ls
  287  cd volumes/
  288  ls
  289  cd myvolume/
  290  clear
  291  ls
  292  cd _data/
  293  ls
  294  docker volume inspect myvolume
  295  cd ,,
  296  cd ..
  297  clear
  298  ls
  299  cd drupal-sites/
  300  clear
  301  ls
  302  cd _data/
  303  ls
  304  cd
  305  clear
  306  docker volume prune
  307  docker volume ls
  308  clear
  309  docker ps
  310  docker ps -a
  311  docker rm -f $(docker ps -a -q)
  312  clear
  313  docker ps
  314  docker ps -a
  315  docker run -it ubuntu:14.04
  316  clear
  317  ifconfig
  318  apt install net-tools
  319  ifconfig
  320  docker run -it -d ubuntu:14.04
  321  docker ps
  322  ifconfig
  323  docker run -it -d ubuntu:14.04
  324  ifconfig
  325  docker network ls
  326  docker network inspect bridge
  327  docker network create --driver bridge mybridge
  328  docker network ls
  329  ifconfig
  330  docker network create --driver bridge mybridge2
  331  docker network ls
  332  ifconfig
  333  clear
  334  docker run -it -d --name mynetwork_container --net mybridge ubuntu:14.04
  335  ifconfig
  336  docker attach mynetwork_container
  337  ckear
  338  clear
  339  ls
  340  docker network create --driver bridge --subnet=172.20.0.0/16 --ip-range=172.20.0.0/24 --gateway=172.20.0.1 my_custom_network
  341  docker network ls
  342  docker network inspect my_custom_network
  343  docker network ls
  344  ifconfig
  345  clear
  346  docker ps -a
  347  docker rm -f $(docker ps -a -q)
  348  docker ps -a
  349  clear
  350  ls
  351  docker run -it --name mynetwork_container --net mybridge ubuntu:14.04
  352  clear
  353  docker ps
  354  docker ps -a
  355  docker rm -f $(docker ps -a -q)
  356  docker ps -a
  357  docker network ls
  358  docker run -it --name network_host --net host ubuntu:14.04
  359  docker run -it --name network_none --net none ubuntu:14.04
  360  clear
  361  docker ps -a
  362  docker rm -f $(docker ps -a -q)
  363  docker run -it -d --name network_container_1 ubuntu:14.04
  364  docker run -it -d --name network_container_2 --net container:network_container_1 ubuntu:14.04
  365  docker attach network_container_1
  366  docker attach network_container_2
  367  clear
  368  ls
  369  docker rm -f $(docker ps -a -q)
  370  clear
  371  cd work/
  372  ls
  373  cd kosa-msa-2024-2nd/
  374  ls
  375  cd src
  376  ls
  377  cd exercise/
  378  cd ba
  379  cd bardroh/
  380  ls
  381  cd day02/
  382  clear
  383  ls
  384  history > h6.txt
